
@using Trail365
@using Trail365.Entities
@using Trail365.ViewModels

@model Trail365.ViewModels.StoryViewModel
@{
    int itemIndex = 0;
    int itemsPerRow = 3;
    int neededRows = 0;
}

@HtmlHelperExtension.DisplayMultilineMarkdownAsRowOrNothing(this.Html, Model.Excerpt, string.Empty)


@while (itemIndex < Model.Blocks.Count)
{
    var currentItem = Model.Blocks[itemIndex];
    StoryBlockViewModel nextItem = null;

    if (itemIndex + 1 < Model.Blocks.Count)
    {
        nextItem = Model.Blocks[itemIndex + 1];
    }


    if ((currentItem.BlockType == StoryBlockType.Image) && (nextItem != null))
    {
        if ((nextItem.BlockType == StoryBlockType.Image) && (nextItem.BlockTypeGroup == currentItem.BlockTypeGroup))
        {
            List<StoryBlockViewModel> items = new List<StoryBlockViewModel>();
            items.Add(currentItem);
            items.Add(nextItem);
            int localIndex = itemIndex + 2;
            while (localIndex < Model.Blocks.Count)
            {
                var localItem = Model.Blocks[localIndex];
                if (localItem.BlockType != StoryBlockType.Image)
                {
                    break;
                }
                if (localItem.BlockTypeGroup!=currentItem.BlockTypeGroup)
                {
                    break;
                }
                items.Add(localItem);
                localIndex += 1;
            }

            neededRows = Convert.ToInt32(Math.Ceiling( (double) items.Count/itemsPerRow));

            @for (int r = 0; r < neededRows; r++)
            {
                <div class="row">
                    @for (int c = 0; c < itemsPerRow; c++)
                    {
                        var ix = (r * itemsPerRow) + c;
                        @if (ix < items.Count)
                        {
                            <div class="col-sm">
                                <img class="img-responsive story-album-image" src="@items[ix].ImageUrl" />
                            </div>
                        }
                    }
                </div>
            }

            itemIndex += items.Count;
            continue;
        }
    }


    @if (currentItem.BlockType == StoryBlockType.Text)
    {
        @HtmlHelperExtension.DisplayMultilineMarkdownAsRowOrNothing(this.Html, currentItem.Content, string.Empty)
        //TODO Text with Image means what?

        @if (string.IsNullOrEmpty(currentItem.ImageUrl) == false)
        {
            <div class="row">
                <div class="col">
                    @Html.GetImageRenderingHtml(currentItem.BlockType, currentItem.ImageUrl, currentItem.Content, false)
                </div>
            </div>
        }
    }

    @if (currentItem.BlockType == StoryBlockType.Image)
    {

        @if (string.IsNullOrEmpty(currentItem.ImageUrl) == false)
        {
            <div class="row">
                <div class="col">
                    <img class="img-responsive story-detail-image" src="@currentItem.ImageUrl" />
                </div>
            </div>
        }
    }

    itemIndex += 1;
}
