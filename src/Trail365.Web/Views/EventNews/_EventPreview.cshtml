@using Trail365
@model Trail365.ViewModels.EventViewModel
@{
    var divID = $"{Model.ID}-Default";
    var externalDetails = false;
    string row = "row no-gutters";

    string col_left = "col-2";
    string col_right = "col-3";
    string col_middle = "col-7";
    string col_dyn = "col-xs-12 col-sm-4 col-md-3 col-lg-2";
    string col_dyn_wide = "col-xs-12 col-sm-12 col-md-12 col-lg-12";
}
<div id="@divID">

    <div class="row no-gutters">

        <div class="@col_left pt-4 pr-3">
            <a href="@Model.DetailsUrl" @Html.Raw(externalDetails ? "target='_blank'" : string.Empty) class="deal-link d-block">
                <span>
                    <span class="month d-block position-relative text-center">@Model.StartTimeMonth()</span>
                    <span class="day d-block position-relative text-center">@Model.StartTimeDayOfMonth()</span>
                    <span class="time d-block position-relative text-center">@Model.StartTimeWeekDay() @Model.StartTimeClock()</span>
                </span>
            </a>
        </div>

        <div class="@col_middle pr-0 pt-3 border-top">

            <a href="@Model.DetailsUrl" @Html.Raw(externalDetails ? "target='_blank'" : string.Empty) class="deal-link d-block">

                <div class="@row">
                    <div class="col text-wrap">
                        <span class="name">@Model.Name</span>
                    </div>
                </div>
            </a>


            <div class="@row">
                @{
                    //a single row that contains MULTIPLE columns that may be stacked or not, depending on device size, and number of columns*@
                }


                @if (!string.IsNullOrEmpty(this.Model.CoverImageUrl))
                {
                    <div class="@col_dyn">
                        <img class="img-responsive cover-news-image" src="@Model.CoverImageUrl" />
                    </div>
                }


                @if (this.Model.Trail != null)
                {
                    <div class="@col_dyn">
                        @if (Model.Trail.DistanceKm.HasValue)
                        {
                            <div class="trail-meta">
                                <i class="fas fa-arrows-alt-h"></i>&nbsp;@Model.Trail.DistanceKm.Value.ToKmFormat()<span class="">&nbsp;km</span>
                            </div>
                        }
                        @if (Model.Trail.Ascent.HasValue)
                        {
                            <div class="trail-meta">
                                <i class="fas fa-arrow-up"></i>&nbsp;@Model.Trail.Ascent.ToIntFormat()<span class="">&nbsp;hm</span>
                            </div>
                        }
                        @if (Model.Trail.Descent.HasValue)
                        {
                            <div class="trail-meta">
                                <i class="fas fa-arrow-down"></i>&nbsp;@Model.Trail.Descent.ToIntFormat()<span class="">&nbsp;hm</span>
                            </div>
                        }
                    </div>
                }

                @if (!string.IsNullOrEmpty(this.Model.Excerpt))
                {
                    <div class="@col_dyn_wide">
                        @HtmlHelperExtension.DisplayMultilineMarkdownAsRow(this.Html, this.Model.Excerpt, false, string.Empty, "pt-2", this.Model.DetailsUrl)
                    </div>
                }




            </div>


        </div>

        <div class="@col_right pt-3">
            <span class="place">@Model.GetHumanizedPlaceOrDefault()</span>
            @if (this.Model.Login.IsModeratorOrHigher && this.Model.Place != null)
            {
                <a class="fg-link" asp-area="Backend" asp-controller="Places" asp-action="Edit" asp-route-Id="@this.Model.Place.ID">[Edit]</a>
            }
            <p><span class="meetingpoint">@this.Model.GetMeetingPointOrDefault()</span></p>
        </div>

    </div>

</div>
